import pandas as pd

import re

# province = input('省份：')
# case_type = input('案件类型（民事，刑事，行政）：')
# about_asset = int(input('是否涉及财产（0不涉及 1涉及）：'))
# if about_asset:
#     base_asset = int(input('案件标的：'))
province, case_type, about_asset, base_asset = '山东', '刑事', 1, 99999999999

# 各省参考数据汇总
# province	case_type	about_asset	min_asset	max_asset	base_data	add_data	min_base_data
base_data = [
    ['上海', '民事', 0, None, None, '3000~12000元/件', None, None],
    ['上海', '民事', 1, float('-inf'), 100000, '0.08-0.12', None, 3000],
    ['上海', '民事', 1, 100000, 1000000, '8000-12000', '0.05-0.07', None],
    ['上海', '民事', 1, 1000000, 10000000, '53000-75000', '0.03-0.05', None],
    ['上海', '民事', 1, 10000000, 100000000, '323000-525000', '0.01-0.03', None],
    ['上海', '民事', 1, 100000000, float('inf'), '1223000-3225000', '0.005-0.01', None],

    ['上海', '刑事', 0, None, None, '侦查阶段：1500~10000元/件，审查起诉阶段：2000~10000元/件，审判阶段：3000~30000元/件', None, None],
    ['上海', '刑事', 1, float('-inf'), 100000, '0.08-0.12', None, 3000],
    ['上海', '刑事', 1, 100000, 1000000, '8000-12000', '0.05-0.07', None],
    ['上海', '刑事', 1, 1000000, 10000000, '53000-75000', '0.03-0.05', None],
    ['上海', '刑事', 1, 10000000, 100000000, '323000-525000', '0.01-0.03', None],
    ['上海', '刑事', 1, 100000000, float('inf'), '1223000-3225000', '0.005-0.01', None],

    ['上海', '行政', 0, None, None, '3000~12000元/件', None, None],
    ['上海', '行政', 1, float('-inf'), 100000, '0.08-0.12', None, 3000],
    ['上海', '行政', 1, 100000, 1000000, '8000-12000', '0.05-0.07', None],
    ['上海', '行政', 1, 1000000, 10000000, '53000-75000', '0.03-0.05', None],
    ['上海', '行政', 1, 10000000, 100000000, '323000-525000', '0.01-0.03', None],
    ['上海', '行政', 1, 100000000, float('inf'), '1223000-3225000', '0.005-0.01', None],

    ['江苏', '民事', 0, None, None, '2500~10000元/件', None, None],
    ['江苏', '民事', 1, float('-inf'), 10000, '2500~10000元/件', None, None],
    ['江苏', '民事', 1, 10000, 100000, '2500-10000', '0.06-0.07', None],
    ['江苏', '民事', 1, 100000, 500000, '7900-16300', '0.05-0.06', None],
    ['江苏', '民事', 1, 500000, 1000000, '27900-40300', '0.04-0.05', None],
    ['江苏', '民事', 1, 1000000, 5000000, '47900-65300', '0.03-0.04', None],
    ['江苏', '民事', 1, 5000000, 10000000, '167900-225300', '0.02-0.03', None],
    ['江苏', '民事', 1, 10000000, 100000000, '267900-375300', '0.01-0.02', None],
    ['江苏', '民事', 1, 100000000, float('inf'), '1167900-2175300', '0.005-0.01', None],

    ['江苏', '刑事', 0, None, None, '侦查阶段：1000~8000元/件，审查起诉阶段：1500~10000元/件，审判阶段：3000~20000元/件', None, None],
    ['江苏', '刑事', 1, float('-inf'), 10000, '2500~10000元/件', None, None],
    ['江苏', '刑事', 1, 10000, 100000, '2500-10000', '0.06-0.07', None],
    ['江苏', '刑事', 1, 100000, 500000, '7900-16300', '0.05-0.06', None],
    ['江苏', '刑事', 1, 500000, 1000000, '27900-40300', '0.04-0.05', None],
    ['江苏', '刑事', 1, 1000000, 5000000, '47900-65300', '0.03-0.04', None],
    ['江苏', '刑事', 1, 5000000, 10000000, '167900-225300', '0.02-0.03', None],
    ['江苏', '刑事', 1, 10000000, 100000000, '267900-375300', '0.01-0.02', None],
    ['江苏', '刑事', 1, 100000000, float('inf'), '1167900-2175300', '0.005-0.01', None],

    ['江苏', '行政', 0, None, None, '2500~10000元/件', None, None],
    ['江苏', '行政', 1, float('-inf'), 10000, '2500~10000元/件', None, None],
    ['江苏', '行政', 1, 10000, 100000, '2500-10000', '0.06-0.07', None],
    ['江苏', '行政', 1, 100000, 500000, '7900-16300', '0.05-0.06', None],
    ['江苏', '行政', 1, 500000, 1000000, '27900-40300', '0.04-0.05', None],
    ['江苏', '行政', 1, 1000000, 5000000, '47900-65300', '0.03-0.04', None],
    ['江苏', '行政', 1, 5000000, 10000000, '167900-225300', '0.02-0.03', None],
    ['江苏', '行政', 1, 10000000, 100000000, '267900-375300', '0.01-0.02', None],
    ['江苏', '行政', 1, 100000000, float('inf'), '1167900-2175300', '0.005-0.01', None],

    ['浙江', '民事', 0, None, None, '2500~10000元/件', None, None],
    ['浙江', '民事', 1, float('-inf'), 100000, '0.06-0.08', None, 2500],
    ['浙江', '民事', 1, 100000, 500000, '6000-8000', '0.05-0.06', None],
    ['浙江', '民事', 1, 500000, 1000000, '26000-32000', '0.04-0.05', None],
    ['浙江', '民事', 1, 1000000, 5000000, '46000-57000', '0.03-0.04', None],
    ['浙江', '民事', 1, 5000000, 10000000, '166000-217000', '0.02-0.03', None],
    ['浙江', '民事', 1, 10000000, float('inf'), '266000-367000', '0.01-0.02', None],

    ['浙江', '刑事', 0, None, None, '侦查阶段：1000~8000元/件，审查起诉阶段：1500~10000元/件，审判阶段：3000~20000元/件', None, None],
    ['浙江', '刑事', 1, float('-inf'), 100000, '0.06-0.08', None, 2500],
    ['浙江', '刑事', 1, 100000, 500000, '6000-8000', '0.05-0.06', None],
    ['浙江', '刑事', 1, 500000, 1000000, '26000-32000', '0.04-0.05', None],
    ['浙江', '刑事', 1, 1000000, 5000000, '46000-57000', '0.03-0.04', None],
    ['浙江', '刑事', 1, 5000000, 10000000, '166000-217000', '0.02-0.03', None],
    ['浙江', '刑事', 1, 10000000, float('inf'), '266000-367000', '0.01-0.02', None],

    ['浙江', '行政', 0, None, None, '2500~10000元/件', None, None],
    ['浙江', '行政', 1, float('-inf'), 100000, '0.06-0.08', None, 2500],
    ['浙江', '行政', 1, 100000, 500000, '6000-8000', '0.05-0.06', None],
    ['浙江', '行政', 1, 500000, 1000000, '26000-32000', '0.04-0.05', None],
    ['浙江', '行政', 1, 1000000, 5000000, '46000-57000', '0.03-0.04', None],
    ['浙江', '行政', 1, 5000000, 10000000, '166000-217000', '0.02-0.03', None],
    ['浙江', '行政', 1, 10000000, float('inf'), '266000-367000', '0.01-0.02', None],

    ['安徽', '民事', 0, None, None, '1000~8000元/件', None, None],
    ['安徽', '民事', 1, float('-inf'), 100000, '1000~8000元/件', None, None],
    ['安徽', '民事', 1, 100000, 500000, '1000-8000', '0.04-0.06', None],
    ['安徽', '民事', 1, 500000, 1000000, '17000-32000', '0.03-0.05', None],
    ['安徽', '民事', 1, 1000000, 5000000, '32000-57000', '0.02-0.04', None],
    ['安徽', '民事', 1, 5000000, 10000000, '112000-217000', '0.01-0.03', None],
    ['安徽', '民事', 1, 10000000, float('inf'), '162000-367000', '0.01-0.02', None],

    ['安徽', '刑事', 0, None, None, '侦查阶段：1200~8000元/件，审查起诉阶段：1200~8000元/件，审判阶段：1200~15000元/件', None, None],
    ['安徽', '刑事', 1, float('-inf'), 100000, '1000~8000元/件', None, None],
    ['安徽', '刑事', 1, 100000, 500000, '1000-8000', '0.04-0.06', None],
    ['安徽', '刑事', 1, 500000, 1000000, '17000-32000', '0.03-0.05', None],
    ['安徽', '刑事', 1, 1000000, 5000000, '32000-57000', '0.02-0.04', None],
    ['安徽', '刑事', 1, 5000000, 10000000, '112000-217000', '0.01-0.03', None],
    ['安徽', '刑事', 1, 10000000, float('inf'), '162000-367000', '0.01-0.02', None],

    ['安徽', '行政', 0, None, None, '1000~8000元/件', None, None],
    ['安徽', '行政', 1, float('-inf'), 100000, '1000~8000元/件', None, None],
    ['安徽', '行政', 1, 100000, 500000, '1000-8000', '0.04-0.06', None],
    ['安徽', '行政', 1, 500000, 1000000, '17000-32000', '0.03-0.05', None],
    ['安徽', '行政', 1, 1000000, 5000000, '32000-57000', '0.02-0.04', None],
    ['安徽', '行政', 1, 5000000, 10000000, '112000-217000', '0.01-0.03', None],
    ['安徽', '行政', 1, 10000000, float('inf'), '162000-367000', '0.01-0.02', None],

    ['福建', '民事', 0, None, None, '800~6000元/件', None, None],
    ['福建', '民事', 1, float('-inf'), 100000, '800~6000元/件', None, None],
    ['福建', '民事', 1, 100000, 500000, '800-6000', '0.04-0.04', None],
    ['福建', '民事', 1, 500000, 1000000, '16800-22000', '0.03-0.03', None],
    ['福建', '民事', 1, 1000000, 5000000, '31800-37000', '0.02-0.02', None],
    ['福建', '民事', 1, 5000000, 10000000, '111800-117000', '0.012-0.012', None],
    ['福建', '民事', 1, 10000000, 50000000, '171800-177000', '0.007-0.007', None],
    ['福建', '民事', 1, 50000000, float('inf'), '451800-457000', '0.0035-0.0035', None],

    ['福建', '刑事', 0, None, None, '侦查阶段：1000~5000元/件，审查起诉阶段：1000~6000元/件，审判阶段：1500~12000元/件', None, None],
    ['福建', '刑事', 1, float('-inf'), 100000, '800~6000元/件', None, None],
    ['福建', '刑事', 1, 100000, 500000, '800-6000', '0.04-0.04', None],
    ['福建', '刑事', 1, 500000, 1000000, '16800-22000', '0.03-0.03', None],
    ['福建', '刑事', 1, 1000000, 5000000, '31800-37000', '0.02-0.02', None],
    ['福建', '刑事', 1, 5000000, 10000000, '111800-117000', '0.012-0.012', None],
    ['福建', '刑事', 1, 10000000, 50000000, '171800-177000', '0.007-0.007', None],
    ['福建', '刑事', 1, 50000000, float('inf'), '451800-457000', '0.0035-0.0035', None],

    ['福建', '行政', 0, None, None, '800~6000元/件', None, None],
    ['福建', '行政', 1, float('-inf'), 100000, '800~6000元/件', None, None],
    ['福建', '行政', 1, 100000, 500000, '800-6000', '0.04-0.04', None],
    ['福建', '行政', 1, 500000, 1000000, '16800-22000', '0.03-0.03', None],
    ['福建', '行政', 1, 1000000, 5000000, '31800-37000', '0.02-0.02', None],
    ['福建', '行政', 1, 5000000, 10000000, '111800-117000', '0.012-0.012', None],
    ['福建', '行政', 1, 10000000, 50000000, '171800-177000', '0.007-0.007', None],
    ['福建', '行政', 1, 50000000, float('inf'), '451800-457000', '0.0035-0.0035', None],

    ['山东', '民事', 0, None, None, '2500~12000元/件', None, None],
    ['山东', '民事', 1, float('-inf'), 10000, '2500~3000元/件', None, None],
    ['山东', '民事', 1, 10000, 100000, '2500-3000', '0.06-0.09', None],
    ['山东', '民事', 1, 100000, 500000, '7900-11100', '0.05-0.06', None],
    ['山东', '民事', 1, 500000, 1000000, '27900-35100', '0.04-0.05', None],
    ['山东', '民事', 1, 1000000, 5000000, '47900-60100', '0.03-0.04', None],
    ['山东', '民事', 1, 5000000, float('inf'), '167900-220100', '协定', None],

    ['山东', '刑事', 0, None, None, '侦查阶段：1500~10000元/件，审查起诉阶段：2000~15000元/件，审判阶段：2500~25000元/件', None, None],
    ['山东', '刑事', 1, float('-inf'), 10000, '2500~3000元/件', None, None],
    ['山东', '刑事', 1, 10000, 100000, '2500-3000', '0.06-0.09', None],
    ['山东', '刑事', 1, 100000, 500000, '7900-11100', '0.05-0.06', None],
    ['山东', '刑事', 1, 500000, 1000000, '27900-35100', '0.04-0.05', None],
    ['山东', '刑事', 1, 1000000, 5000000, '47900-60100', '0.03-0.04', None],
    ['山东', '刑事', 1, 5000000, float('inf'), '167900-220100', '协定', None],

    ['山东', '行政', 0, None, None, '800~6000元/件', None, None],
    ['山东', '行政', 1, float('-inf'), 10000, '2500~3000元/件', None, None],
    ['山东', '行政', 1, 10000, 100000, '2500-3000', '0.06-0.09', None],
    ['山东', '行政', 1, 100000, 500000, '7900-11100', '0.05-0.06', None],
    ['山东', '行政', 1, 500000, 1000000, '27900-35100', '0.04-0.05', None],
    ['山东', '行政', 1, 1000000, 5000000, '47900-60100', '0.03-0.04', None],
    ['山东', '行政', 1, 5000000, float('inf'), '167900-220100', '协定', None],

]


# 构建“num1-num2”的数据结构，并重载加法和乘法
class Fees:
    def __init__(self, data):
        """
        将字符串“num1-num2”构建成自己的数据结构
        :param data:
        """
        self.data = str(data)
        num_list = re.findall('[\d\.]+', self.data)
        self.num1, self.num2 = float(num_list[0]), float(num_list[1]) if len(num_list) > 1 else None

    def __repr__(self):
        """
        转成eval能识别的字符串
        :return:
        """
        return 'Fees({})'.format(self.data)

    def __str__(self):
        """
        打印出来的字符串
        :return:
        """
        if self.num2 and self.num2 > self.num1:
            return '{:.2f}~{:.2f}'.format(self.num1, self.num2)
        else:
            return '{:.2f}'.format(self.num1)

    def __add__(self, other):
        """
        重载加法运算
        :param other:
        :return:
        """
        if other.num2 is None:
            return Fees(str(self.num1 + other.num1) + '-' + str(self.num2 + other.num1))
        else:
            return Fees(str(self.num1 + other.num1) + '-' + str(self.num2 + other.num2))

    def __mul__(self, other):
        """
        重载乘法运算
        :param other:
        :return:
        """
        if other.num2 is None:
            return Fees(str(self.num1 * other.num1) + '-' + str(self.num2 * other.num1))
        else:
            return Fees(str(self.num1 * other.num1) + '-' + str(self.num2 * other.num2))

    def __getitem__(self, item):
        """
        重载索引
        :param item:
        :return:
        """
        if int(item) == 0:
            return float(self.num1)
        elif int(item) == 1:
            return float(self.num2)

    def __setitem__(self, key, value):
        """
        重载索引赋值
        :param key:
        :param value:
        :return:
        """
        if int(key) == 0:
            self.num1 = value
        elif int(key) == 1:
            self.num2 = value
        self.data = Fees(str(self.num1) + '-' + str(self.num2))


# 构建DataFrame
columns = ['province', 'case_type', 'about_asset', 'min_asset', 'max_asset', 'base_data', 'add_data', 'min_base_data']
df = pd.DataFrame(data=base_data, columns=columns)

# 筛选
df = df[(df['province'] == province) & (df['case_type'] == case_type) & (df['about_asset'] == about_asset)]

# 如果涉及财产，返回案件标的对应的值
if about_asset:
    df = df[(df['min_asset'] < base_asset) & (df['max_asset'] >= base_asset)]

    # 如果base_data中存在中文，则说明是固定的值，直接返回base_data
    if re.search('[\u4e00-\u9fa5]', df['base_data'].values[0]):
        print('base_data中中文的值为：', df['base_data'].values[0])
        print('参考费用为：', df['base_data'].values[0])

    # 若没有中文，则进行计算后返回
    else:
        # 第一档：直接计算，不用进行累加
        if df['min_asset'].values[0] == float('-inf'):
            add_asset = base_asset  # 需要纳入计算的钱
            end_asset = Fees(df['base_data'].values[0]) * Fees(add_asset)  # 需要累加的值
            # 以最低标准为准
            if df['min_base_data'].values[0] and df['min_base_data'].values[0] > end_asset[0]:
                end_asset[0] = df['min_base_data'].values[0]
                if df['min_base_data'].values[0] > end_asset[1]:
                    end_asset[1] = df['min_base_data'].values[0]
        # 其他档：base_data + 需要累加的值
        else:
            add_asset = base_asset - df['min_asset'].values[0]  # 需要纳入计算的钱
            # 对山东的“协定”做特殊判断
            if re.search('[\u4e00-\u9fa5]', df['add_data'].values[0]):
                print('参考费用为：{}'.format(df['add_data'].values[0]))
            else:
                add_money = Fees(df['add_data'].values[0]) * Fees(add_asset)  # 需要累加的值
                end_asset = Fees(df['base_data'].values[0]) + add_money  # 最终的结算结果
                print('参考费用为：', end_asset)

# 如果没有涉及财产，则直接返回base_data
else:
    print('参考费用为：', df['base_data'].values[0])
